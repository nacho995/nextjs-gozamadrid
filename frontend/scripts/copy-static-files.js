#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

const publicDir = path.join(__dirname, '..', 'public');
const buildDir = path.join(__dirname, '..', '.next', 'static');
const outDir = path.join(__dirname, '..', 'out');

// Lista de archivos cr√≠ticos que deben copiarse
const criticalFiles = [
  'logonuevo.png',
  'logo.png',
  'manifest.json',
  'favicon.ico',
  'favicon-16x16.png',
  'favicon-32x32.png'
];

console.log('üìÅ Copiando archivos est√°ticos cr√≠ticos...');

// Funci√≥n para copiar archivo
function copyFile(src, dest) {
  try {
    if (!fs.existsSync(path.dirname(dest))) {
      fs.mkdirSync(path.dirname(dest), { recursive: true });
    }
    fs.copyFileSync(src, dest);
    console.log(`‚úÖ Copiado: ${path.basename(src)}`);
    return true;
  } catch (error) {
    console.error(`‚ùå Error copiando ${path.basename(src)}:`, error.message);
    return false;
  }
}

// Copiar archivos cr√≠ticos al directorio out (para export est√°tico)
if (fs.existsSync(outDir)) {
  console.log('\nüì¶ Copiando a directorio out/...');
  criticalFiles.forEach(file => {
    const src = path.join(publicDir, file);
    const dest = path.join(outDir, file);
    
    if (fs.existsSync(src)) {
      copyFile(src, dest);
    } else {
      console.warn(`‚ö†Ô∏è  Archivo no encontrado: ${file}`);
    }
  });
}

// Verificar que los archivos existen en public
console.log('\nüîç Verificando archivos en public/...');
let allFilesExist = true;

criticalFiles.forEach(file => {
  const filePath = path.join(publicDir, file);
  if (fs.existsSync(filePath)) {
    const stats = fs.statSync(filePath);
    console.log(`‚úÖ ${file} - ${(stats.size / 1024).toFixed(2)} KB`);
  } else {
    console.error(`‚ùå ${file} - NO ENCONTRADO`);
    allFilesExist = false;
  }
});

if (allFilesExist) {
  console.log('\nüéâ Todos los archivos cr√≠ticos est√°n presentes!');
  process.exit(0);
} else {
  console.error('\nüö® Algunos archivos cr√≠ticos faltan!');
  process.exit(1);
} 