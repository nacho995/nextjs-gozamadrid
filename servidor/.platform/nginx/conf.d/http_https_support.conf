# Configuración para permitir tanto HTTP como HTTPS sin forzar redirección
# Esta configuración se integra con la de Elastic Beanstalk sin modificar su funcionalidad principal

# Desactivar la exposición de la versión de Nginx en las cabeceras
# server_tokens off; <--- Eliminado porque ya está en la configuración principal de EB

# Configuración para aceptar tanto HTTP como HTTPS sin redirección
# No hacemos nada especial con el protocolo, así ambos funcionarán
# (eliminada la variable $do_redirect que no se usaba)

# Cabeceras de seguridad pero sin forzar HTTPS
add_header X-Content-Type-Options nosniff;
add_header X-XSS-Protection "1; mode=block";
add_header X-Frame-Options SAMEORIGIN;

# Permitir CORS para ambos protocolos (HTTP y HTTPS)
add_header Access-Control-Allow-Origin '*';
add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE';
add_header Access-Control-Allow-Headers 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';

# Configuración para WebSockets y proxy
proxy_http_version 1.1;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection 'upgrade';
proxy_set_header Host $host;
proxy_cache_bypass $http_upgrade;

# Configuración para preservar el protocolo original
# Esto asegura que Node.js sepa si la petición original era HTTP o HTTPS
proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto; 