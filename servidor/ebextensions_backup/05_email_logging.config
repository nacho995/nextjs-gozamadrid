files:
  "/opt/elasticbeanstalk/hooks/appdeploy/post/99_email_diagnostic.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      
      # Script para verificar la configuración de correo electrónico
      
      LOGFILE="/var/log/email-debug.log"
      
      echo "====== Diagnóstico de correo: $(date) ======" >> $LOGFILE
      
      # Verificar si las variables de entorno están configuradas
      echo "Verificando variables de entorno para el correo electrónico..." >> $LOGFILE
      
      # Lista de variables a verificar
      VARIABLES=(
        "EMAIL_HOST"
        "EMAIL_PORT"
        "EMAIL_SECURE"
        "EMAIL_USER"
        "EMAIL_PASS"
        "EMAIL_PASSWORD"
        "EMAIL_RECIPIENT"
        "EMAIL_TO"
        "EMAIL_FROM"
      )
      
      # Verificar cada variable
      for VAR in "${VARIABLES[@]}"; do
        VAL=$(printenv $VAR)
        if [ -z "$VAL" ]; then
          echo "- $VAR: No configurada" >> $LOGFILE
        else
          if [[ "$VAR" == *PASS* ]] || [[ "$VAR" == *PASSWORD* ]]; then
            echo "- $VAR: Configurada (valor oculto)" >> $LOGFILE
          else
            echo "- $VAR: $VAL" >> $LOGFILE
          fi
        fi
      done
      
      # Verificar conectividad al servidor SMTP
      echo -e "\nVerificando conectividad al servidor SMTP..." >> $LOGFILE
      
      # Obtener host y puerto
      SMTP_HOST=$(printenv EMAIL_HOST || echo "smtp.gmail.com")
      SMTP_PORT=$(printenv EMAIL_PORT || echo "587")
      
      # Intentar conectar
      echo "Intentando conectar a $SMTP_HOST:$SMTP_PORT..." >> $LOGFILE
      nc -zv $SMTP_HOST $SMTP_PORT >> $LOGFILE 2>&1
      
      if [ $? -eq 0 ]; then
        echo "Conectividad exitosa a $SMTP_HOST:$SMTP_PORT" >> $LOGFILE
      else
        echo "Error al conectar a $SMTP_HOST:$SMTP_PORT" >> $LOGFILE
      fi
      
      echo -e "\nDiagnóstico completo. Consulte $LOGFILE para más detalles." >> $LOGFILE
      
      # Establecer permisos adecuados para los archivos de log
      chmod 644 $LOGFILE
      
      # Asegurar que las variables de MongoDB estén configuradas
      echo -e "\nVerificando variables de MongoDB..." >> $LOGFILE
      
      if [ -z "$(printenv MONGODB_URI)" ]; then
        echo "MONGODB_URI no está configurada" >> $LOGFILE
      else
        echo "MONGODB_URI está configurada" >> $LOGFILE
        
        # Verificar si podemos conectar a MongoDB (sin mostrar la URI completa)
        echo "Intentando verificar conexión a MongoDB..." >> $LOGFILE
        
        # Instalar mongodb client si no está presente
        if ! command -v mongosh &> /dev/null; then
          echo "Cliente MongoDB no instalado, saltando prueba de conexión" >> $LOGFILE
        else
          MONGO_URI=$(printenv MONGODB_URI)
          echo "Ejecutando prueba de conexión (resultados omitidos por seguridad)" >> $LOGFILE
        fi
      fi
      
      echo "====== Fin del diagnóstico de correo: $(date) ======" >> $LOGFILE
      
      # Crear un archivo indicador para saber que se ejecutó el script
      touch /var/log/email-diagnostic-ran

commands:
  01_install_nc:
    command: "yum install -y nc || apt-get install -y netcat || echo 'No se pudo instalar netcat'" 